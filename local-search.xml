<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MacOS下dmg制作流程</title>
    <link href="/2022/05/10/iOS/MacOS%E4%B8%8Bdmg%E5%88%B6%E4%BD%9C%E6%B5%81%E7%A8%8B/"/>
    <url>/2022/05/10/iOS/MacOS%E4%B8%8Bdmg%E5%88%B6%E4%BD%9C%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="一、归档Release包"><a href="#一、归档Release包" class="headerlink" title="一、归档Release包"></a>一、归档Release包</h2><ol><li><p>菜单栏选择 product -&gt; Archive</p></li><li><p>点击 Distribute App 按钮，选择 Copy App</p><img src="/2022/05/10/iOS/MacOS%E4%B8%8Bdmg%E5%88%B6%E4%BD%9C%E6%B5%81%E7%A8%8B/01.png" class="" width="600" title="DistributeApp"><img src="/2022/05/10/iOS/MacOS%E4%B8%8Bdmg%E5%88%B6%E4%BD%9C%E6%B5%81%E7%A8%8B/02.png" class="" width="600" title="CopyApp"></li><li><p>点击 Next，选择导出名称和目录, Export 发布包</p></li></ol><h2 id="二、制作dmg镜像"><a href="#二、制作dmg镜像" class="headerlink" title="二、制作dmg镜像"></a>二、制作dmg镜像</h2><ol><li><p>新建空白文件夹，重命名文件夹为应用名称，拖入刚导出的应用程序</p></li><li><p>打开终端命令，进入刚创建文件夹，制作 Applications快捷方式</p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/Users/m</span>ac<span class="hljs-regexp">/Desktop/</span>JSONConverter <br>ln -s /Applications Applications  <br></code></pre></td></tr></table></figure><img src="/2022/05/10/iOS/MacOS%E4%B8%8Bdmg%E5%88%B6%E4%BD%9C%E6%B5%81%E7%A8%8B/04.png" class="" width="600" title="Applications"></li><li><p>打开磁盘工具 -&gt; 新建映像 -&gt; 基于文件夹新建映像，选择刚创建的文件夹，点击 存储</p> <img src="/2022/05/10/iOS/MacOS%E4%B8%8Bdmg%E5%88%B6%E4%BD%9C%E6%B5%81%E7%A8%8B/03.png" class="" width="600" title="export"></li></ol>]]></content>
    
    
    <categories>
      
      <category>iOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MacOS</tag>
      
      <tag>dmg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据结构导论-线性表</title>
    <link href="/2022/05/03/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AF%BC%E8%AE%BA/%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
    <url>/2022/05/03/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AF%BC%E8%AE%BA/%E7%BA%BF%E6%80%A7%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="一、线性表的基本概念"><a href="#一、线性表的基本概念" class="headerlink" title="一、线性表的基本概念"></a>一、线性表的基本概念</h2><p>线性表是由n(n&gt;&#x3D;0)个数据元素（节点）$a_{1}$, $a_{2}$, … $a_{n}$组成的<strong>有限序列</strong>。</p><ol><li>数据元素的个数n定义为表的长度，n&#x3D;0时称为空表，记作（）或φ</li><li>将非空的线性表（n&gt;0）记作：L&#x3D;($a_{1}$, $a_{2}$, … $a_{n}$), $a_{1}$称为起始结点，$a_{n}$称为终端结点，对任意一对相邻结点$a_{i}$和$a_{i+1}$(1&lt;&#x3D;i&lt;n)，$a_{i}$称为$a_{i+1}$的直接前驱，$a_{i+1}$称为$a_{i}$的直接后继。</li><li>数据元素$a_{i}$(1&lt;&#x3D;i&lt;n)只是个抽象符号，其具体含义在不同情况下可以不同。</li></ol><p>注意：线性表中只有一个起始节点，一个终端结点，起始结点没有直接前驱，有一个直接后继，终端结点有一个直接前驱，没有直接后继，除此二节点外，每个结点都有且只有一个直接前驱和一个直接后继。</p><p>2-14</p><h2 id="二、线性表的顺序存储"><a href="#二、线性表的顺序存储" class="headerlink" title="二、线性表的顺序存储"></a>二、线性表的顺序存储</h2><h2 id="三、线性表的链接存储"><a href="#三、线性表的链接存储" class="headerlink" title="三、线性表的链接存储"></a>三、线性表的链接存储</h2><h3 id="1-单链表的类型定义"><a href="#1-单链表的类型定义" class="headerlink" title="1. 单链表的类型定义"></a>1. 单链表的类型定义</h3><h3 id="2-线性表的基本运算在单链表上的实现"><a href="#2-线性表的基本运算在单链表上的实现" class="headerlink" title="2. 线性表的基本运算在单链表上的实现"></a>2. 线性表的基本运算在单链表上的实现</h3><h2 id="四、其他运算在单链表上的实现"><a href="#四、其他运算在单链表上的实现" class="headerlink" title="四、其他运算在单链表上的实现"></a>四、其他运算在单链表上的实现</h2><h3 id="1-建表"><a href="#1-建表" class="headerlink" title="1. 建表"></a>1. 建表</h3><h3 id="2-删除重复节点"><a href="#2-删除重复节点" class="headerlink" title="2. 删除重复节点"></a>2. 删除重复节点</h3><h2 id="五、其他链表"><a href="#五、其他链表" class="headerlink" title="五、其他链表"></a>五、其他链表</h2><h3 id="1-循环链表"><a href="#1-循环链表" class="headerlink" title="1. 循环链表"></a>1. 循环链表</h3><h3 id="2-双向循环链表"><a href="#2-双向循环链表" class="headerlink" title="2. 双向循环链表"></a>2. 双向循环链表</h3><h2 id="六、顺序实现与连接实现的比较"><a href="#六、顺序实现与连接实现的比较" class="headerlink" title="六、顺序实现与连接实现的比较"></a>六、顺序实现与连接实现的比较</h2><h2 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h2>]]></content>
    
    
    <categories>
      
      <category>数据结构导论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>线性表，链表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据结构导论-概念</title>
    <link href="/2022/05/01/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AF%BC%E8%AE%BA/%E6%A6%82%E5%BF%B5/"/>
    <url>/2022/05/01/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AF%BC%E8%AE%BA/%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<h2 id="一、-概念"><a href="#一、-概念" class="headerlink" title="一、 概念"></a>一、 概念</h2><ul><li>数据： 所有被计算机存储、处理的对象。</li><li>数据元素： 数据的基本单位，是运算的基本单位，尝尝又简称为元素。</li><li>数据项： 数据元素常常还可以分为若干个数据项，<strong>数据的不可分割的最小标识单位</strong>。</li></ul><h2 id="二、数据结构分类"><a href="#二、数据结构分类" class="headerlink" title="二、数据结构分类"></a>二、数据结构分类</h2><h3 id="1-逻辑结构"><a href="#1-逻辑结构" class="headerlink" title="1. 逻辑结构"></a>1. 逻辑结构</h3><p> 数据的逻辑结构：指数据元素之间的结构关系，与数据元素本身的形式，内容，相对位置，个数无关。<br> 数据的<strong>四类逻辑结构</strong><br>    - <strong>集合：</strong> 任意两个节点之间都没 有邻接关系，组织形式松散<br>    - <strong>线性结构：</strong> 节点按逻辑关系依次排列形成一条”锁链”<br>    - <strong>树形结构：</strong> 具有<strong>分支、层次</strong>特性，上层的节点可以和下层多个节点相邻接，但下层节点只能和上层的一个节点相邻接<br>    - <strong>图结构：</strong> 任何两个节点都可以相邻接，**最复杂 **</p><h3 id="2-存储结构"><a href="#2-存储结构" class="headerlink" title="2. 存储结构"></a>2. 存储结构</h3><p>数据的存储结构：也称为存储结构，指数据结构在机内的表示，数据的逻辑结构在计算机的实现<br>存储结构的主要部分</p><ul><li>存储结点（每个存储结点存放一个数据元素）</li><li>数据元素之间关联方式的表示</li></ul><h2 id="三、-存储结构种类"><a href="#三、-存储结构种类" class="headerlink" title="三、 存储结构种类"></a>三、 存储结构种类</h2><h3 id="1-顺序存储结构"><a href="#1-顺序存储结构" class="headerlink" title="1. 顺序存储结构"></a>1. 顺序存储结构</h3><p>   将元素存储到<strong>一片连续的存储区</strong>，利用节点在存储器中的相对位置来表示数据元素的<strong>逻辑</strong>关系</p><ul><li>特点：<br>   a. 预先分配好长度，需要预估存储数据需要的存储量<br>   b. 插入和删除需要移动其他元素<br>   c. 存取快捷，是随机存储结构</li></ul><h3 id="2-链式存储结构"><a href="#2-链式存储结构" class="headerlink" title="2. 链式存储结构"></a>2. 链式存储结构</h3><p>   是给节点附加一个指针字段，指出其后继节点的位置，即存放节点的存储单元为两部分：数组项和指针项，每个指针指向一个与本节点有逻辑关系的节点，用指针表示数据元素之间的<strong>逻辑</strong>关系</p><ul><li>特点：<br>a. 动态分配，不需要预先确定内存分配<br>b. 插入和删除不需要移动其他元素<br>c. 非随机存储结构</li></ul><h3 id="3-索引存储方式"><a href="#3-索引存储方式" class="headerlink" title="3. 索引存储方式"></a>3. 索引存储方式</h3><p>   借助索引表中的<strong>索引指示</strong>各存储结点的存储位置</p><h3 id="4-散列存储方式"><a href="#4-散列存储方式" class="headerlink" title="4. 散列存储方式"></a>4. 散列存储方式</h3><p>   用<strong>散列函数</strong>只是各结点的存储位置</p><h2 id="四、-运算"><a href="#四、-运算" class="headerlink" title="四、 运算"></a>四、 运算</h2><blockquote><p>运算是指某种逻辑结构上施加的操作，即对逻辑结构的加工。</p></blockquote><p><strong>线性表、栈和队列</strong>中的元素具有相同的逻辑结构（即<strong>线性结构</strong>），但有不同的运算集，它们是不同的数据结构。<br>运算的实现是指改运算的算法，一个算法规定了求解给定问题所需的<strong>处理步骤及其执行顺序</strong>，使得给定问题能在有限时间内被求解。</p><p>评价算法好坏的因为包括一下几个方面:</p><ul><li>1.正确性 </li><li>2.易读性</li><li>3.<strong>健壮性</strong></li><li>4.<strong>时空性</strong></li></ul><p>时空性 通常考虑两个度量：</p><ul><li><p>1.时间复杂度：算法运行时需要的总步数，通常是问规模的函数</p><p>  常见的时间复杂度按数量级递增配列依次为：</p><ul><li><ol><li>常数O(1)</li></ol></li><li><ol start="2"><li>对数阶($\log_{2}n$)</li></ol></li><li><ol start="3"><li>线性阶O(n)</li></ol></li><li><ol start="4"><li>线性对数阶O(n$\log_{2}n$)</li></ol></li><li><ol start="5"><li>平方阶O($n^{2}$)</li></ol></li><li><ol start="6"><li>多项式阶O($n^{c}$)</li></ol></li><li><ol start="7"><li>指数阶O($C^{n}$)</li></ol></li></ul></li></ul><p>我们将时间复杂度记为输入数据规模n的函数，若求解问题需要执行$n^{2}$次操作则，记作O($n^{2}$) </p><ul><li><ol start="2"><li>空间复杂度：算法执行时所占用的存储空间，通常是问题规模的函数</li></ol><p>  空间复杂度是对一个算法在运行过程中<strong>临时占用存储空间大小的量度</strong><br>  一个算法在执行期间所需要的存储空间量包括以下部分：</p><ul><li>程序代码所占用的空间</li><li>输出数据所占用的空间</li><li>辅助变量所占用的空间</li></ul></li></ul><p>   估算算法空间复杂度时，一般<strong>只分析辅助变量所占用的空间</strong></p>]]></content>
    
    
    <categories>
      
      <category>数据结构导论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>时间复杂度</tag>
      
      <tag>空间负载度</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络原理-物理层</title>
    <link href="/2022/04/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E7%89%A9%E7%90%86%E5%B1%82/"/>
    <url>/2022/04/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E7%89%A9%E7%90%86%E5%B1%82/</url>
    
    <content type="html"><![CDATA[<h2 id="一、基带传输"><a href="#一、基带传输" class="headerlink" title="一、基带传输"></a>一、基带传输</h2><h3 id="一、基带传输基本概念"><a href="#一、基带传输基本概念" class="headerlink" title="一、基带传输基本概念"></a>一、基带传输基本概念</h3><p>基带传输：直接在信道传送基带信号<br>数字基带传输：在信道中传输数字基带信号</p><h3 id="二、数字基带传输编码"><a href="#二、数字基带传输编码" class="headerlink" title="二、数字基带传输编码"></a>二、数字基带传输编码</h3><h4 id="一、信号码"><a href="#一、信号码" class="headerlink" title="一、信号码"></a>一、信号码</h4><ul><li><ol><li>单极不归零码</li></ol></li><li><ol start="2"><li>双极不归零码</li></ol></li><li><ol start="3"><li>单极归零码</li></ol></li><li><ol start="4"><li>双极归零码</li></ol></li><li><ol start="5"><li>差分码（相对码）</li></ol><ul><li>利用电平的变化与否来表示信息</li><li>二进制数字0：相邻电平<strong>无</strong>跳变</li><li>二进制数字1：相邻电平<strong>有</strong>有跳变<img src="/2022/04/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E7%89%A9%E7%90%86%E5%B1%82/%E5%B7%AE%E5%88%86%E7%A0%81.png" class="" title="差分码信号波形"></li></ul></li></ul><h4 id="二、传输码"><a href="#二、传输码" class="headerlink" title="二、传输码"></a>二、传输码</h4><ul><li><ol><li>AMI码（<strong>信号交替反转码，3种电平</strong>） <img src="/2022/04/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E7%89%A9%E7%90%86%E5%B1%82/AMI.png" class="" title="信号交替反转码信号波形"></li></ol></li><li><ol start="2"><li>双相码、曼彻斯特码</li></ol><ul><li>只有正负电平，脉冲持续时间的中间时刻都要进行跳变</li><li>1：正电平跳到负电平（1：正负）</li><li>0：负电平跳到正电平（0：负正）<img src="/2022/04/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E7%89%A9%E7%90%86%E5%B1%82/%E5%8F%8C%E7%9B%B8%E7%A0%81.png" class="" title="双相码信号波形"></li></ul></li><li><ol start="3"><li>差分双相码、差分曼彻斯特码</li></ol><ul><li>1：相邻电平<strong>有</strong>跳变</li><li>0：相邻电平<strong>无</strong>跳变<img src="/2022/04/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E7%89%A9%E7%90%86%E5%B1%82/%E5%B7%AE%E5%88%86%E5%8F%8C%E7%9B%B8%E7%A0%81.png" class="" title="差分双相码信号波形"></li></ul></li><li><ol start="4"><li>米勒码</li></ol><ul><li>1：正负或负正</li><li>0：延续前面1的电平，脉冲期间不跳变</li><li>11：交替编码</li><li>00：交替编码</li><li>01：延续0电平。正负或负正</li><li>10：延续前面1的电平。脉冲时间不跳变 <img src="/2022/04/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E7%89%A9%E7%90%86%E5%B1%82/%E7%B1%B3%E5%8B%92%E7%A0%81.png" class="" title="米勒码信号波形"></li></ul></li><li><ol start="5"><li>CMI码（信号反转码）</li></ol><ul><li>1：正负交替编码</li><li>0：负正  <img src="/2022/04/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E7%89%A9%E7%90%86%E5%B1%82/CMI.png" class="" title="信号反转码信号波形"></li></ul></li><li><ol start="6"><li>nBmB码，nBmT码</li></ol></li></ul>]]></content>
    
    
    <categories>
      
      <category>计算机网络原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>基带传输</tag>
      
      <tag>频带传输</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络原理-网络层</title>
    <link href="/2022/03/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E7%BD%91%E7%BB%9C%E5%B1%82/"/>
    <url>/2022/03/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E7%BD%91%E7%BB%9C%E5%B1%82/</url>
    
    <content type="html"><![CDATA[<h1 id="一、网络层服务"><a href="#一、网络层服务" class="headerlink" title="一、网络层服务"></a>一、网络层服务</h1><p>任务：将数据从<strong>源主机</strong>送达到<strong>目的主机</strong></p><p>功能：</p><ol><li><strong>转发</strong>：当里输入链路接收到一个分组后，路由器需要决策那条输出链路将分组发送出去，并将分组从输入接口转移到输出接口</li><li><strong>路由选择</strong>：当分组从源主机流向目的主机是，必须通过某种方式决定分组经过的路由或路径</li><li><strong>连接建立</strong>：网络层连接是从源主机到目的主机主机经过的一条路径，这条路径经过的每个路由器等网络设备都要参与网络层连接的建立</li></ol><h1 id="二、数据报网络与虚电路网络"><a href="#二、数据报网络与虚电路网络" class="headerlink" title="二、数据报网络与虚电路网络"></a>二、数据报网络与虚电路网络</h1><h2 id="1-数据报网络（无连接服务）"><a href="#1-数据报网络（无连接服务）" class="headerlink" title="1. 数据报网络（无连接服务）"></a>1. 数据报网络（无连接服务）</h2><p>源主机没要发送一个分组，就为改分组加上<strong>目的主机地址</strong>,然后将改分组推进网络。每个路由器使用分组的<strong>目的主机地址</strong>转发分组</p><h2 id="2-虚电路网络（面向连接）"><a href="#2-虚电路网络（面向连接）" class="headerlink" title="2. 虚电路网络（面向连接）"></a>2. 虚电路网络（面向连接）</h2><ul><li><p>源主机到到目的主机的一条路径上建立的一条网络层逻辑连接，通信结束后再拆除连接</p></li><li><p>3个构成要素</p><ul><li>从源主机到目的主机之间的一条<strong>路径</strong>（一系列的链路和分组交换机）</li><li>改路径上的每条链路的<strong>虚电路标识</strong>（VCID）</li><li>分组交换机的转发表中记录虚电路标识的<strong>接续</strong>关系</li></ul></li></ul><h2 id="3-对比"><a href="#3-对比" class="headerlink" title="3.对比"></a>3.对比</h2><table><thead><tr><th align="center">项目</th><th align="center">数据报网络</th><th align="center">虚电路网络</th></tr></thead><tbody><tr><td align="center">是否建立连接</td><td align="center">不建立连接</td><td align="center">先建立连接</td></tr><tr><td align="center">地址</td><td align="center">每个在分组包含源和目的端地址</td><td align="center">每个分组含一个短的虚电路号</td></tr><tr><td align="center">分组顺序</td><td align="center">按序发送，不一定按序接收</td><td align="center">按序发送，按序接收</td></tr><tr><td align="center">路由选择</td><td align="center">每个分组独立路由选择</td><td align="center">建立VC时需要路由选择，之后所有分组都沿此路由转发</td></tr><tr><td align="center">典型网络</td><td align="center">因特网</td><td align="center">X.25&#x2F;帧中继&#x2F;ATM</td></tr></tbody></table><h1 id="三、网络互连与网络互连设备"><a href="#三、网络互连与网络互连设备" class="headerlink" title="三、网络互连与网络互连设备"></a>三、网络互连与网络互连设备</h1><h2 id="1-异构网络互连"><a href="#1-异构网络互连" class="headerlink" title="1. 异构网络互连"></a>1. 异构网络互连</h2><p>异构网络： 主要指两个网络的通信技术和运行协议的不同<br>异构网络互连的基本策略： <strong>协议转换</strong>和构建虚拟互联网络</p><h2 id="2-路由器"><a href="#2-路由器" class="headerlink" title="2. 路由器"></a>2. 路由器</h2><p>路由器：最典型的网络层设备，具有多个输入端口和多个输出端口的专用计算机，主要任务就是获取与维护路由信息以及转发分组</p><p>路由器从功能体系结构角度：</p><ul><li>输入端口：查找，转发，到达分组， 缓存排队功能</li><li>交换结构: 完成具体转发工作，将输入端口IP数据包交换到指定的输出端口<ol><li>基于内存交换：性能最低，价格最便宜</li><li>基于总线交换</li><li>基于网络交换：性能最高，价格最贵</li></ol></li><li>输出端口：缓存排队，从队列中取出分组进行数据链路层数据帧封装和发送<ol><li>先到先服务（FCFS）调度策略</li><li>按优先级调度、按IP数据报的服务类型调度</li></ol></li><li>路由处理器<ol><li>执行命令</li><li>路由协议运行</li><li>路由计算以及路由表的更新和维护</li></ol></li></ul><h1 id="四、网络层拥塞控制"><a href="#四、网络层拥塞控制" class="headerlink" title="四、网络层拥塞控制"></a>四、网络层拥塞控制</h1><blockquote><p>用户对网络资源(包括链路带宽、存储空间、处理器处理能力等)的总需求超过了挽留过固有的容量</p></blockquote><ul><li><p>网络负载在<strong>膝点</strong>附近时，兔兔量和分组平均延迟发稿理想的平衡，网络的<strong>使用效率最高</strong></p></li><li><p>发生拥塞的原因：</p><ul><li>缓冲区容量有限</li><li>传输线路的带宽有限</li><li>网络节点的处理能力有限</li><li>网络中门口写部分发生了故障</li></ul></li><li><p>解决方法</p><ul><li>流量感知路由： 权值根据网络负载动态调整，可以将网络流量引导到不同的链路上，均衡网路负载</li><li>准入控制： 广泛应用于<strong>虚电路网络</strong>的拥戴复方技术，对新建虚电路审核，如果建立的虚电路会导致网络变得拥塞，那么网络拒绝家里新虚电路</li><li>流量调节：在网络发生拥塞时，通过调整发送方发送数据的速率来消除拥塞<ul><li>抑制分组： 感知到拥塞的路由器选择一个被拥塞的数据报，给改数据报的源主机返回一个抑制分组</li><li>背压：音质分组在从拥塞节点到元几点的路径上的每一条，都发挥抑制作用</li></ul></li><li>负载脱落：有选择地主动丢弃一些数据报，减轻网络负载，从而缓解或消除拥塞</li></ul></li></ul><h1 id="五、Internet网络层"><a href="#五、Internet网络层" class="headerlink" title="五、Internet网络层"></a>五、Internet网络层</h1><h2 id="1-IPv4协议"><a href="#1-IPv4协议" class="headerlink" title="1. IPv4协议"></a>1. IPv4协议</h2><ul><li>IPv4:Internet网络层最核心的协议，定义了如何封装上层协议（如：TCP&#x2F;UDP）的报文段，Internet网络层寻址（IP寻址）以及如何转发IP数据报等内容</li></ul><img src="/2022/03/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E7%BD%91%E7%BB%9C%E5%B1%82/ipv4.png" class="" title="IPv4结构"><ol><li>版本号：4位。IP的版本号</li><li>首部长度： 4位。IP数据报的首部长度：20B-60B</li><li>区分服务：8 位。用来指示期望获得那种类型的服务  </li><li>数据长度：16位。IP数据报的总字节数</li><li>生存时间：8位。Time-To-Live, TTL.表示IP数据报在网络中可以通过的路由器书（跳步数）</li><li>上层协议：8位，指示IP数据报封装的是哪个上层协议（TCP:6, UDP:17）</li><li>数据校验和：16位，利用校验和实现对P数据报首部的差错检测</li><li>源IP地址：32位，发出IP数据报的源主机的IP地址</li><li>目的IP地址：32位，IP数据报需要东大的主机的IP地址</li><li>选项：长度可变</li><li>数据：存放IP数据报所封装的传输层报文段</li><li><strong>标识</strong> 16位，表示一个IP数据报。每产生一个IP数据报，IP协议的计数器加1，在IP数据报<strong>分片和重组</strong>的过程中用于标识数据同一个IP数据报。该字段不可唯一表示一个IP数据报</li><li><strong>标志</strong> 3位：<ul><li>DF 禁止分片: 0-可以分片， 1-禁止分片</li><li>MF 更多分片: 0-未被分片或分片的最后一片，1-是分片且不是最后一个</li></ul></li><li>片偏移量：以8B为单位。表示一个IP数据报分片与原UP数据报的数据的相对偏移量。当该字段值为0时，且MF&#x3D;1,则表示这是一个IP分片，且是第一个分片。</li></ol><h2 id="2-IPv4编址"><a href="#2-IPv4编址" class="headerlink" title="2. IPv4编址"></a>2. IPv4编址</h2><h3 id="一、IPv4地址长度为32位，共有2-23个不同的IP地址，约为43亿个"><a href="#一、IPv4地址长度为32位，共有2-23个不同的IP地址，约为43亿个" class="headerlink" title="一、IPv4地址长度为32位，共有2^23个不同的IP地址，约为43亿个"></a>一、IPv4地址长度为32位，共有2^23个不同的IP地址，约为43亿个</h3><h3 id="二、IPv4地址的三种标记方式："><a href="#二、IPv4地址的三种标记方式：" class="headerlink" title="二、IPv4地址的三种标记方式："></a>二、IPv4地址的三种标记方式：</h3><table><thead><tr><th align="center">方法</th><th align="center">表示方式</th></tr></thead><tbody><tr><td align="center">二进制标记法</td><td align="center">11000000 10101000 00000001 01100101</td></tr><tr><td align="center">点分十进制标记法</td><td align="center">192.168.1.101</td></tr><tr><td align="center">十六进制标记法</td><td align="center">0xC0A80165</td></tr></tbody></table><h3 id="三、IP地址分配"><a href="#三、IP地址分配" class="headerlink" title="三、IP地址分配"></a>三、IP地址分配</h3><ol><li>前端（Prefix）：即网络部分，用于描述主机所归属的网路<ul><li>分类地址：定长前缀（A&#x2F;B&#x2F;C&#x2F;D&#x2F;E类）</li><li>无类地址：前缀长度可变</li></ul></li><li>后缀（Postfix）：即主机部分，用于表示主机在网络中的唯一地址</li><li>A&#x2F;B&#x2F;C类地址：可以用于标识网络中的主机或路由器</li></ol><table><thead><tr><th align="center">类</th><th align="center">前缀长度</th><th align="center">前缀</th><th align="center">首字节(十进制)</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">8位</td><td align="center">0xxxxxxx</td><td align="center">0-127</td></tr><tr><td align="center">B</td><td align="center">16位</td><td align="center">10xxxxxx xxxxxxxx</td><td align="center">128-191</td></tr><tr><td align="center">C</td><td align="center">24位</td><td align="center">110xxxxx xxxxxxxx xxxxxxxx</td><td align="center">192-223</td></tr></tbody></table><p>4.子网掩码： 定义一个子网的网络前缀长度</p><ul><li>子网掩码位数：32位</li><li>书写形式：二进制，点分十进制</li><li>取值规则：对应前缀，前部位1，对应后缀，全部为0</li></ul><p>5.路由聚合：减少路由表项数，提高路由效率，将可以聚合在一起的子网聚合成一个大的子网 </p><h2 id="3-动态主机配置协议"><a href="#3-动态主机配置协议" class="headerlink" title="3. 动态主机配置协议"></a>3. 动态主机配置协议</h2><blockquote><p>DHCP在应用层实现，传输层使用UDP,DHCP服务器端口号67，DHCP客户端口号68</p></blockquote><p>工作过程</p><ul><li>第一步：DHCP服务器发现：广播方式</li><li>第二步：DHCP服务器提供：广播方式</li><li>第三步：DHCP请求：广播方式</li><li>第四步：DHCP确认</li></ul><h2 id="4-网络地址转换"><a href="#4-网络地址转换" class="headerlink" title="4. 网络地址转换"></a>4. 网络地址转换</h2><blockquote><p>(Network Address Translation, NAT) 使私有地址在公共Internet上正常通讯</p></blockquote><p>工作原理</p><ul><li><ol><li>从呢网出去的IP数据报，将其IP地址替换为NAT服务器用友的合法的公共IP地址，并将替换关系记录到NAT转换表中</li></ol></li><li><ol start="2"><li>从公共互联网返回的IP数据报，依据其目的IP地址检索NAT转换表，并利用检索到的内部私有IP地址替换目的IP地址，然后将IP数据报转发到内部网络</li></ol></li></ul><h2 id="5-ICMP（互联网控制报文协议）"><a href="#5-ICMP（互联网控制报文协议）" class="headerlink" title="5. ICMP（互联网控制报文协议）"></a>5. ICMP（互联网控制报文协议）</h2><blockquote><p>进行主机或路由器间的网络层差错报告与网络探测</p></blockquote><p>差错报告报文</p><ul><li>终点不可达</li><li>原点抑制</li><li>时间超时</li><li>参数问题</li><li>路由重定向</li></ul><p>询问报文</p><ul><li>回声请求&#x2F;应答</li><li>时间戳请求&#x2F;应答</li></ul><h2 id="6-IPv6"><a href="#6-IPv6" class="headerlink" title="6. IPv6"></a>6. IPv6</h2><ol><li><p>IPv6地址长度为128位</p></li><li><p>IPv6地址表示方法</p><ul><li><ol><li>8组冒号分割的十六进制数，连续多组的 “0000” 可以采用压缩格式表示，利用“::”代替，注意：只能出现一次</li></ol></li><li><ol start="2"><li>在IPv6地址中嵌入IPv4的点分十进制</li></ol></li></ul></li><li><p>分类</p><ul><li><ol><li>单播地址：可做源地址和目的地址</li></ol></li><li><ol start="2"><li>组播地址：可做目的地址</li></ol></li><li><ol start="3"><li>任播地址： 可做目的地址</li></ol></li></ul></li><li><p>IPv4到IPv6迁移</p><ol><li>双协议栈：网路结点同时具备发送IPv4与IPv6数据报的能力</li><li>隧道：很好地解决IPv6通信中经过IPv4路由器的温恩提，同时也不会出现信息丢失的问题</li></ol></li></ol><h1 id="六、路由算法与路由协议"><a href="#六、路由算法与路由协议" class="headerlink" title="六、路由算法与路由协议"></a>六、路由算法与路由协议</h1><h2 id="1-路由选择算法的分类"><a href="#1-路由选择算法的分类" class="headerlink" title="1. 路由选择算法的分类"></a>1. 路由选择算法的分类</h2><p>分类标准</p><ul><li><p>是否需要全局信息</p><ul><li>需要网络的完整信息 - 全局式路由选择算法 - 典型：链路状态路由选择算法(LS算法)</li><li>不需要网络的完整信息 - 分布式路由选择算法 - 典型：距离向量路由选择算法（DV算法）</li></ul></li><li><p>静态动态</p><ul><li>静态 - 人工配置</li><li>动态 - 网络发生变化，自动计算最佳路由 - LS&#x2F;DV算法</li></ul></li><li><p>是否敏感</p><ul><li>敏感 - 负载敏感的路由选择算法</li><li>延迟 - 负载迟钝的路由选择算法</li></ul></li></ul><h2 id="2-链路状态路由选择算法（LS算法）"><a href="#2-链路状态路由选择算法（LS算法）" class="headerlink" title="2. 链路状态路由选择算法（LS算法）"></a>2. 链路状态路由选择算法（LS算法）</h2><p>链路状态路由选择算法（LS算法）</p><ul><li>利用Dijkstra算法求<strong>最短路径</strong></li></ul><h2 id="3-距离向量路由选择算法"><a href="#3-距离向量路由选择算法" class="headerlink" title="3. 距离向量路由选择算法"></a>3. 距离向量路由选择算法</h2><p>分布式路由选择算法，每个节点仅掌握与所有邻居节点的直接链路代价</p><ul><li>基础是Bellman-Ford方程(简称B-F方程)</li></ul><h2 id="4-层次化路由选择"><a href="#4-层次化路由选择" class="headerlink" title="4. 层次化路由选择"></a>4. 层次化路由选择</h2><blockquote><p>层次化路由选择：大规模网络路由选择最有效可行的解决方法</p></blockquote><ol><li>自治系统(autonomous system,AS)：互联网按组织边界划分为多个自治系统。每个自治系统由运行<strong>相同</strong> 路由协议和路由选择算法的路由器组成</li><li>网关路由器：每个自治系统存在至少一个与其他自治系统互联的路由器</li><li>层次化路由选择原理，大规模互联网的路由划分为两层<ul><li>自治系统内路由选择：计算到达自治系统内目的网络的路由</li><li>自治系统间路由选择：负责其他自治系统网络的可达性信息</li></ul></li></ol><h2 id="5-Internet路由选择协议"><a href="#5-Internet路由选择协议" class="headerlink" title="5. Internet路由选择协议"></a>5. Internet路由选择协议</h2><h3 id="一-内部网关协议（IGP）-Internet自治系统内路由选择协议"><a href="#一-内部网关协议（IGP）-Internet自治系统内路由选择协议" class="headerlink" title="一. 内部网关协议（IGP）:Internet自治系统内路由选择协议"></a>一. 内部网关协议（IGP）:Internet自治系统内路由选择协议</h3><h3 id="1-路由信息协议（Routing-Infomation-Protocol-RIP）"><a href="#1-路由信息协议（Routing-Infomation-Protocol-RIP）" class="headerlink" title="1. 路由信息协议（Routing Infomation Protocol, RIP）"></a>1. 路由信息协议（Routing Infomation Protocol, RIP）</h3><ol><li>较小的AS。基于<strong>距离向量路由选择算法</strong>的IGP</li><li>RIP报文：封装进UDP数据报</li><li>特性：<ul><li><ol><li>RIP在度量路径时采用的是<strong>条数</strong></li></ol></li><li><ol start="2"><li>RIP的费用定义在源路由器和目的子网之间</li></ol></li><li><ol start="3"><li>RIP被限制在网络直径不超过<strong>15跳</strong>的自治系统内使用</li></ol></li></ul></li></ol><h3 id="2-开放最短路径优先协议（Open-Shortest-Path-First-OSPF）"><a href="#2-开放最短路径优先协议（Open-Shortest-Path-First-OSPF）" class="headerlink" title="2. 开放最短路径优先协议（Open Shortest Path First, OSPF）"></a>2. 开放最短路径优先协议（Open Shortest Path First, OSPF）</h3><ol><li>OSPF:较大规模的A。基于<strong>链路状态路由选择算法</strong>的IGP</li><li>直接封装在IP数据报传输</li><li>优点：<ul><li><ol><li>安全</li></ol></li><li><ol start="2"><li>支持多条相同费用路径</li></ol></li><li><ol start="3"><li>支持区别化费用度量</li></ol></li><li><ol start="4"><li>支持单播路由与多播路由</li></ol></li><li><ol start="5"><li>分层路由</li></ol></li></ul></li></ol><h3 id="二-外部网关协议（EGP）-Internet自治系统间路由选择协议"><a href="#二-外部网关协议（EGP）-Internet自治系统间路由选择协议" class="headerlink" title="二. 外部网关协议（EGP）:Internet自治系统间路由选择协议"></a>二. 外部网关协议（EGP）:Internet自治系统间路由选择协议</h3><ol><li><p>边界网关协议（Border Gateway Protocol, BGP）实现跨自治系统的路由信息交换。典型版本是BGP4,<br>  BGP主要有4种报文：</p><ul><li>OPEN(打开)报文</li><li>UPDATE(更新)报文</li><li>KEEPALIVE(保活)报文</li><li>NOTIFICATION(通知)报文</li></ul></li><li><p>总结</p><table><thead><tr><th align="center">协议名称</th><th align="center">封装</th><th align="center">适用范围</th></tr></thead><tbody><tr><td align="center">RIP</td><td align="center">UDP</td><td align="center">较小AS内</td></tr><tr><td align="center">OSPF</td><td align="center">IP数据报</td><td align="center">较大AS内</td></tr><tr><td align="center">BGP</td><td align="center">TCP报文段</td><td align="center">跨AS</td></tr></tbody></table></li></ol>]]></content>
    
    
    <categories>
      
      <category>计算机网络原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>路由</tag>
      
      <tag>IP</tag>
      
      <tag>网络层</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络原理-传输层</title>
    <link href="/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E4%BC%A0%E8%BE%93%E5%B1%82/"/>
    <url>/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E4%BC%A0%E8%BE%93%E5%B1%82/</url>
    
    <content type="html"><![CDATA[<h2 id="一、传输层的基本服务"><a href="#一、传输层的基本服务" class="headerlink" title="一、传输层的基本服务"></a>一、传输层的基本服务</h2><h3 id="1-传输层功能"><a href="#1-传输层功能" class="headerlink" title="1.传输层功能"></a>1.传输层功能</h3><blockquote><p><strong>应用进程</strong>之间提供<strong>端到端</strong>的<strong>逻辑通信</strong>服务,只有<strong>主机</strong>才有传输层，网络核心中的中间系统只用到<strong>下三层（物理层、数据链路层、网络层）</strong> 的功能</p></blockquote><ul><li>对应用层报文进行<em><strong>分</strong></em>段和重组</li><li>面向应用层实现<em><strong>复</strong></em>用与分解</li><li>实现端到端的<em><strong>流</strong></em>量控制</li><li><em><strong>拥</strong></em>塞控制</li><li>传输层<em><strong>寻</strong></em>址</li><li>对报文进行<em><strong>差错</strong></em>检测</li><li>实现进程间端到端<em><strong>可靠</strong></em>数据传输控制</li></ul><h3 id="2-传输层寻址与端口"><a href="#2-传输层寻址与端口" class="headerlink" title="2.传输层寻址与端口"></a>2.传输层寻址与端口</h3><ul><li>一台计算机中，不同应用进程用<strong>进程标识符(进程ID)<strong>来区分，在</strong>全网</strong>范围内利用<strong>IP地址+端口号</strong>唯一标识一个通信端点。</li><li>传输层端口号为16位整数，可以编号65536（2的16次方）</li><li>常用端口号：<strong>端口号小于256的端口</strong></li></ul><table><thead><tr><th align="center">范围</th><th align="center">类型</th><th align="center">属于</th></tr></thead><tbody><tr><td align="center">0 ~ 1023</td><td align="center">熟知端口号</td><td align="center">服务器端口号</td></tr><tr><td align="center">1024 ~ 49151</td><td align="center">登记端口号</td><td align="center">服务器端口号</td></tr><tr><td align="center">49152 ~ 65535</td><td align="center">短暂端口号</td><td align="center">客户器端口号</td></tr></tbody></table><h2 id="二、传输层的复用与分解"><a href="#二、传输层的复用与分解" class="headerlink" title="二、传输层的复用与分解"></a>二、传输层的复用与分解</h2><blockquote><p><strong>复用与分解</strong>：支持众多应用进程共用同一个传输层协议，并能够将收到的数据准确交付给不同的应用进程</p></blockquote><h3 id="1-无连接的多路复用与分解"><a href="#1-无连接的多路复用与分解" class="headerlink" title="1.无连接的多路复用与分解"></a>1.无连接的多路复用与分解</h3><blockquote><p>用户数据报协议(User Datagram Protocol, <em>UDP</em>):Internet 提供<strong>无连接服务</strong>的传输层协议</p></blockquote><ul><li>UDP套接字二元组:&lt;目的IP地址，目的端口号&gt;</li></ul><h3 id="2-面向连接的多路复用与分解"><a href="#2-面向连接的多路复用与分解" class="headerlink" title="2.面向连接的多路复用与分解"></a>2.面向连接的多路复用与分解</h3><blockquote><p>传输控制协议(Transmission Control Protocol, <em>TCP</em>): Internet提供<strong>面向连接服务</strong>的传输层协议</p></blockquote><ul><li>TCP套接字四元组：&lt;源IP地址，源端口号，目的IP地址，目的端口号&gt;</li></ul><h2 id="三、停-等协议与滑动窗口协议"><a href="#三、停-等协议与滑动窗口协议" class="headerlink" title="三、停-等协议与滑动窗口协议"></a>三、停-等协议与滑动窗口协议</h2><h3 id="1-可靠数据传输基本原理"><a href="#1-可靠数据传输基本原理" class="headerlink" title="1.可靠数据传输基本原理"></a>1.可靠数据传输基本原理</h3><ul><li><p>不可靠传输信道在数据传输中可能发生：</p><ul><li>比特差错</li><li>乱序</li><li>数据丢失</li></ul></li><li><p>基于不可靠信道实现可靠数据传输采取的措施：</p><ul><li>差错检测：利用编码实现数据报传输过程中的比特差错检测</li><li>确认：接收方向发送方反馈接收状态。ACK（肯定确认）；NAK（否定确认）</li><li>重传：发送方重新发送接受方没有正确接收的数据</li><li>序号：确保数据按序提交</li><li>计时器：解决数据丢失问题</li></ul></li></ul><h3 id="2-停-等协议"><a href="#2-停-等协议" class="headerlink" title="2.停-等协议"></a>2.停-等协议</h3><img src="/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E4%BC%A0%E8%BE%93%E5%B1%82/stop-and-wait.png" class="" title="停-等协议流程"><ul><li>停-等协议工作流程<ul><li>发送方发送经过差错编码和编号的报文段，等待接收方确认</li><li>接收方如果差错检测无误且序号正确，则接受报文段，并向发送方发送ACK，否则丢弃报文段，并向发送方发送NAK</li><li>发送方如果接受到ACK，则继续发送后续报文，否则重发刚刚发送的报文段。</li></ul></li></ul><h3 id="3-滑动窗口协议"><a href="#3-滑动窗口协议" class="headerlink" title="3.滑动窗口协议"></a>3.滑动窗口协议</h3><blockquote><p>流水线协议(管道协议):允许发送方在没有收到确认前连续发送多个分组。最典型的流水线协议:<strong>滑动窗口协议</strong></p></blockquote><p>滑动窗口协议，根据窗口的大小，可以分为：</p><ul><li><p>回退N步协议：GBN协议(Go-Back-N)</p><ul><li>发送端缓存能力高，可以在没有得到确认前发送多个分组</li><li>接收端缓存能力很低，只能接受1个按需到达的分组，不能缓存未按序到达的分组</li><li>发送窗口 &gt;&#x3D;1, 接收窗口 &#x3D;1</li><li>累计确认</li></ul></li><li><p>选择重传协议：SR协议(Selective Repeat)</p><ul><li>发送端缓存能力高，接收端缓存能力高</li><li>发送窗口 &gt;1, 接收窗口 &gt;1</li><li>逐个确认</li></ul></li></ul><h2 id="四、用户数据报协议-UDP"><a href="#四、用户数据报协议-UDP" class="headerlink" title="四、用户数据报协议(UDP)"></a>四、用户数据报协议(UDP)</h2><blockquote><p>用户数据报协议(UDP)：Internet<strong>传输层</strong>协议，提供<strong>无连接</strong>、不可靠、数据报尽力传输服务。</p></blockquote><h3 id="1-UDP特点"><a href="#1-UDP特点" class="headerlink" title="1.UDP特点"></a>1.UDP特点</h3><ul><li>应用进程容易控制发送什么数据以及何时发送，会出现分组的丢失和重复</li><li>无需建立连接</li><li>无连接</li><li>首部开销小，只有8个字节（Byte）</li></ul><h3 id="2-UDP数据报结构"><a href="#2-UDP数据报结构" class="headerlink" title="2.UDP数据报结构"></a>2.UDP数据报结构</h3><img src="/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E4%BC%A0%E8%BE%93%E5%B1%82/UDP.png" class="" title="UDP结构"><p>UDP首部四个字段，每个字段长度都是2个字节，共8个字节</p><ul><li>源端口号和目的端口号：UDP实现复用和分解</li><li>长度：UDP报文段中的字节数（首部和数据的总和）</li><li>校验和：接收方使用来检测数据报是否出现差错</li></ul><h3 id="3-UDP校验和"><a href="#3-UDP校验和" class="headerlink" title="3.UDP校验和"></a>3.UDP校验和</h3><ul><li><p>计算规则</p><ol><li>所有参与运算的内容按照<strong>16位对齐求和</strong></li><li>求和过程中遇到<strong>溢出（即进位）</strong>都被<strong>回卷</strong>（即进位与和的最低位再相加）</li><li>最后得到的和<strong>取反码</strong>，就是UDP的校验和，填入UDP数据报的校验和字段</li></ol></li><li><p>参数运算的内容</p><ol><li>UDP伪首部（只在计算校验和使用，发送时不包含 ）</li><li>UDP首部</li><li>应用数据</li></ol></li></ul><h2 id="五、传输控制协议-TCP"><a href="#五、传输控制协议-TCP" class="headerlink" title="五、传输控制协议(TCP)"></a>五、传输控制协议(TCP)</h2><blockquote><p>传输控制协议（Transmission Control Protocol, TCP）：Internet传输层协议。提供面向连接、可靠、有序、字节流传输服务</p></blockquote><ul><li>应用进程先建立连接</li><li>每一条TCP连接只有两个端点</li><li>可靠交付：无差错、不丢失、不重复、按序到达</li><li>全双工通讯</li><li>面向字节流</li></ul><h3 id="1-TCP报文段结构"><a href="#1-TCP报文段结构" class="headerlink" title="1.TCP报文段结构"></a>1.TCP报文段结构</h3><img src="/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E4%BC%A0%E8%BE%93%E5%B1%82/TCP.png" class="" title="TCP结构"><ol><li>源端口号字段、目的端口号字段个占16位，复用和分解上层应用的数据</li><li>序号字段、确认序号字段各占用32 位<ul><li>序号字段：TCP序号是对每个应用层数据的<strong>每个字节</strong>进行编号</li><li>确认序号字段：<strong>期望</strong>从对方接收数据的字节序号，即该序号对应的字节尚未收到</li></ul></li><li>首部长度：占4位。指出TCP段的首部长度，以<strong>4字节为计算单位</strong>，长度在20~60个字节之间</li><li>保留字段：占6位。保留为今后使用， 目前值为0</li><li>URG&#x2F;ACK&#x2F;PSH&#x2F;RST&#x2F;SYN&#x2F;FIN各占1位。为标志位字段，各占1位，取值0或1<ul><li>紧急URG &#x3D; 1, 紧急指针字段有效，优先传送</li><li>确认ACK &#x3D; 1，确认序号字段有效，ACK&#x3D;0,确认序号字段无效</li><li>推送PSH &#x3D; 1，尽快将报文段中的数据交付接收应用进程，不要等缓存满了再交付</li><li>复位RST &#x3D; 1，TCP连接出现严重差错，释放连接，再重新建立TCP连接</li><li>同步SYN &#x3D; 1，该TCP报文段是一个建立新连接请求控制段或同意建立线连接的确认段</li><li>终止FIN &#x3D; 1，TCP报文段的发送端数据已经发送完毕，请求释放连接</li></ul></li><li>接收窗口字段：占16位。向对方通告我方接收窗口的大小。实现TCP的流量控制</li><li>校验和字段：占16位。计算方法与UDP校验和的计算方法相同</li><li>紧急指针字段：占16位。URG &#x3D;1时，才有效，支出在本TCP报文段中紧急数据共有多少个字节</li><li>选项字段长度可变，最短为0字节，最长为40字节</li></ol><h3 id="2-TCP连接管理"><a href="#2-TCP连接管理" class="headerlink" title="2.TCP连接管理"></a>2.TCP连接管理</h3><h4 id="1-连接建立（3次握手）"><a href="#1-连接建立（3次握手）" class="headerlink" title="1. 连接建立（3次握手）"></a>1. 连接建立（3次握手）</h4><img src="/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E4%BC%A0%E8%BE%93%E5%B1%82/TCP-Connect.png" class="" title="TCP三次握手"><ol><li><p>第一次握手，客户端向服务期发送连接请求段：（SYN&#x3D;1,seq&#x3D;x）</p><ul><li>SYN&#x3D;1：建立连接请求控制段</li><li>seq&#x3D;x：表示传输的报文段的第1个数据字节的序列号是x，此序列号代表整个报文段的序号(补充：sequence number，序号的意思)</li></ul></li><li><p>第二次握手，服务器发回确认报文段：（SYN&#x3D;1,ACK&#x3D;1,seq&#x3D;y,ack_seq&#x3D;x+1）</p><ul><li>SYN&#x3D;1：同意建立新连接的确认段</li><li>ACK&#x3D;1：确认序号字段有效</li><li>seq&#x3D;y：服务器告诉客户确认报文段的序列号是y</li><li>ack_seq&#x3D;x+1：表示已经收到了序列号为x的报文段，准备接收序列号为x+1的报文段。服务器由LISTEN进入SYN_REVD(同步收到)</li></ul></li><li><p>第三次握手，客户端对服务器的<strong>同意连接报文段</strong>进行确认：（ACK&#x3D;1,seq&#x3D;x+1,ack_seq&#x3D;y+1）</p><ul><li>ACK&#x3D;1：确认序号字段有效</li><li>seq&#x3D;x+1：客户此次的报文段的序列号是x+1</li><li>ack_seq&#x3D;y+1：客户期望及手段服务器序列号为y+1的报文段</li></ul></li></ol><p>总结</p><ul><li>第一次握手：客户发送请求，此时服务器知道客户能发</li><li>第二次握手：服务发送确认，此时客户知道服务器能收能发</li><li>第三次握手：客户发送确认，此时服务器知道客户能收</li></ul><p>补充</p><ul><li>当客户端发送ACK时，客户端进入ESTABLISHED状态</li><li>当服务端收到ACK时，也进入ESTABLISHED状态</li><li>第三次握手客户端可携带数据</li></ul><h4 id="2-连接断开（4次挥手）"><a href="#2-连接断开（4次挥手）" class="headerlink" title="2. 连接断开（4次挥手）"></a>2. 连接断开（4次挥手）</h4><img src="/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E4%BC%A0%E8%BE%93%E5%B1%82/tcp_disconnect.png" class="" title="TCP四次挥手"><ol><li><p>第一次挥手，客户向服务器发送释放连接报文段：（FIN&#x3D;1,seq&#x3D;u）</p><ul><li>FIN&#x3D;1：发送端数据发送完毕，请求释放连接</li><li>seq&#x3D;u：传输的第一个数据字节的序号是u</li><li>客户端状态由ESTABLISHED进入FIN_WAIT_1(终止等待1状态)</li></ul></li><li><p>第二次挥手，服务器向客户发送确认段：（ACK&#x3D;1,seq&#x3D;v,ack_seq&#x3D;u+1）</p><ul><li>ACK&#x3D;1：确认字号段有效</li><li>ack_seq&#x3D;u+1：服务器期望接收客户数据序号为u+1</li><li>seq&#x3D;v：服务器传输的数据序号是v</li><li>服务器状态由ESTABLISHED进入CLOSE_WAIT(关闭等待)</li><li>客户端收到ACK后，由FIN_WAIT_1进入FIN_WAIT_2</li></ul></li><li><p>第三次挥手，服务器向客户发送释放连接报文段：(FIN&#x3D;1,ACK&#x3D;1,seq&#x3D;v+1,ack_seq&#x3D;u+1)</p><ul><li>FIN&#x3D;1: 请求释放连接</li><li>ACK&#x3D;1:  确认字号段有效</li><li>ack_seq&#x3D;u+1：服务器期望接收客户数据序号为u+1</li><li>seq&#x3D;v+1: 表示自己传输的第一个数据字节序号是v+1</li><li>服务器状态由CLOSE_WAIT进入LAST_ACK(最后确认)</li></ul></li><li><p>第四次挥手，客户向服务器发送确认段：（ACK&#x3D;1,seq&#x3D;u+1,ack_seq&#x3D;v+1+1）</p><ul><li>ACK&#x3D;1：确认序号段有效</li><li>ack_seq&#x3D;v+1+1：表示客户期望接收服务器数据序号是v+1+1</li><li>seq&#x3D;u+1:表示客户传输的数据序号是u+1</li><li>客户端由FIN_WAIT_2进入TIME_WAIT,等待2MSL时间，进入CLOSED</li><li>服务器在收到最后一次ACK后，由LAST_ACK进入CLOSED</li></ul></li></ol><h3 id="3-TCP可靠数据传输"><a href="#3-TCP可靠数据传输" class="headerlink" title="3.TCP可靠数据传输"></a>3.TCP可靠数据传输</h3><ol><li><p><strong>可靠</strong>：保证接收方应用进程从缓冲区读出的字节流与发送方发出的字节流是完全一样的</p></li><li><p>TCP实现可靠数据传输的工作机制：</p><ul><li>a. 分段：应用层数据被<strong>分割</strong>成TCP认为最合适发送的数据块；最大报文段长度(Maximum Segment Size, MSS)，报文段中封装的<strong>应用层数据</strong>的最大长度，MSS不包含TCP首部长度</li><li>b. 序号：发送方对发送的数据报进行编号，确保数据按序提交给接收方，一个字节占用一个序号，序号字段指的就是一个报文段第一个字节的序号</li><li>c. 确认：接收方向发送方反馈接收状态，确认是否正确接收数据，TCP采取累积确认</li><li>d. 差错检测：利用差戳编码实现数据报传输过程中的比特查错检测（甚至纠正）</li><li>e. 重传：发送方重新发送接收方没有正确接收的数据</li><li>d. 计时器：在发送方引入计时器，解决数据丢失问题</li></ul></li></ol><h3 id="4-TCP流量控制"><a href="#4-TCP流量控制" class="headerlink" title="4.TCP流量控制"></a>4.TCP流量控制</h3><p>协调发送方与接收方的数据发送与接收速度，在通信过程中，接收方设置报文段的接收<strong>接收窗口字段</strong>来将窗口大小通知给发送方</p><h3 id="5-TCP拥塞控制"><a href="#5-TCP拥塞控制" class="headerlink" title="5.TCP拥塞控制"></a>5.TCP拥塞控制</h3><p>拥塞：太多的主机以太快的速度向网络中发送太多的数据，超出了网络处理能力，导致大量数据分组拥挤在中间设备队列中等待转发，网络性能显著下降的现象</p><p>拥塞预防策略：流量整形技术，规范主机向网络发送数据的流量</p><p>拥塞控制：通过合理调度、规范、调整向网络中发送数据的主机数量、发送速率、数据量，以<strong>避免</strong>拥塞或<strong>消除</strong>已发生的拥塞</p><p>概念补充</p><ol><li>拥塞窗口（CongWin）：连接开始，CongWin&#x3D;1MSS, MSS:1个最大报文段长度（Maximum Segment Size）</li><li>阈值（Threshold）:临界值</li></ol><p>TCP拥塞控制的算法</p><ol><li>慢启动：在TCP连接建立时，每经过1个RTT，拥塞窗口值增大一倍</li><li>拥塞避免：当拥塞窗口大于等于阈值时，每经过1个RTT,拥塞窗口值加1</li><li>快速重传：接收端收到3次重复确认，则推断被重复确认的报文段已经丢失，于是<strong>立即发送被重复确认</strong>的报文段 </li><li>快速恢复<ul><li><p>当发生3次重复确认时，网络拥塞程度不是很严重</p><ul><li>新的阈值为当前<strong>拥塞窗口</strong>的一半</li><li>新的拥塞窗口调整为新的阈值</li><li>不在重新从慢启动阶段开始，而是直接从新的阈值开始，直接进入拥塞避免阶段</li></ul></li><li><p>当发生计时器超时</p><ul><li>新的阈值为当前<strong>拥塞窗口</strong>的一半</li><li>闲的拥塞窗口直接调整为1MSS</li><li>重新从慢启动阶段开始</li></ul></li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>计算机网络原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TCP</tag>
      
      <tag>UDP</tag>
      
      <tag>传输层</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络原理-应用层</title>
    <link href="/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E5%BA%94%E7%94%A8%E5%B1%82/"/>
    <url>/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E5%BA%94%E7%94%A8%E5%B1%82/</url>
    
    <content type="html"><![CDATA[<h1 id="一、计算机网络应用体系结构"><a href="#一、计算机网络应用体系结构" class="headerlink" title="一、计算机网络应用体系结构"></a>一、计算机网络应用体系结构</h1><h2 id="一、C-x2F-S结构网络应用"><a href="#一、C-x2F-S结构网络应用" class="headerlink" title="一、C&#x2F;S结构网络应用"></a>一、C&#x2F;S结构网络应用</h2><p>客户&#x2F;服务器结构的网络应用是<strong>最典型、最基本</strong>的网络应用。例如：www应用，文件传输，电子邮件。<br>特点：</p><ol><li>通信双方分为客户程序和服务器程序，用户与用户之间不进行直接通信</li><li>服务器程序需先运行</li><li>客户程序后运行，主动与服务器进行通信</li></ol><h2 id="二、纯P2P结构的网络应用"><a href="#二、纯P2P结构的网络应用" class="headerlink" title="二、纯P2P结构的网络应用"></a>二、纯P2P结构的网络应用</h2><p>通信双方没有传统意义上的客户端服务器之分，地位对等，通信双方都具备客户端与服务器的特征<br>特点：</p><ol><li>应用的对等方都是用户的计算机</li><li>很强的应用规模伸缩性</li><li>应用在对等方之间进行</li><li>应用充分剧集利用了端系统的计算能力以及网络传输带宽</li></ol><h2 id="三、混合结构网络应用"><a href="#三、混合结构网络应用" class="headerlink" title="三、混合结构网络应用"></a>三、混合结构网络应用</h2><p>混合结构挽留过应用将C&#x2F;S应用和P2P应用相结合 </p><h1 id="二、网络应用通信的基本原理"><a href="#二、网络应用通信的基本原理" class="headerlink" title="二、网络应用通信的基本原理"></a>二、网络应用通信的基本原理</h1><h2 id="一、网络应用的节本通信过程"><a href="#一、网络应用的节本通信过程" class="headerlink" title="一、网络应用的节本通信过程"></a>一、网络应用的节本通信过程</h2><p>运行在不同主机上的<strong>应用进程</strong>间以<strong>C&#x2F;S</strong>进行的通信</p><h2 id="二、网络应用编程接口"><a href="#二、网络应用编程接口" class="headerlink" title="二、网络应用编程接口"></a>二、网络应用编程接口</h2><p>典型的网络应用编程接口：<strong>套接字(Socket)<strong>，对于一个传输层协议，需要为其接口的每个套接字分配特定的编号，标识改套接字，该编号称为</strong>端口号</strong></p><h1 id="三、域名系统（DNS）"><a href="#三、域名系统（DNS）" class="headerlink" title="三、域名系统（DNS）"></a>三、域名系统（DNS）</h1><h2 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h2><p>域名系统：将<strong>域名</strong>映射为<strong>IP地址</strong><br>域名解析：实现映射的过程<br><strong>层次树状结构命名方式</strong>：每个域名由不同级别的域名构成，各个层级域名之间用<strong>点分割</strong></p><h2 id="二、层次化命名空间"><a href="#二、层次化命名空间" class="headerlink" title="二、层次化命名空间"></a>二、层次化命名空间</h2><p>顶级域名的分类</p><ul><li>国家顶级域名： cn、us、uk等</li><li>通用顶级域名：com、org、gov、edu等</li><li>基础结构域名：只有一个，arpa</li></ul><h2 id="三、域名服务器"><a href="#三、域名服务器" class="headerlink" title="三、域名服务器"></a>三、域名服务器</h2><p>一个服务器所管辖的范围叫做<strong>区</strong>，存储着自己所管辖范围内主机的域名到IP地址的映射</p><ul><li>根域名服务器：根域服务器是<strong>最重要</strong>的服务器，全球共13个，用a~m命名。保存所有顶级域名服务器的域名和IP地址</li><li>顶级域名服务器：负责管理在该顶级域名夫妇器注册的所有二级域名</li><li>权威域名服务器：负责一个区的域名服务器，保存改区中的所有主机的<strong>域名和IP地址映射</strong></li><li>中间域名服务器：不是以上三种的域名服务器<br>本地域名服务器：主机进行域名查询时<strong>首先</strong>被查询的域名服务器</li></ul><h2 id="三、域名解析过程"><a href="#三、域名解析过程" class="headerlink" title="三、域名解析过程"></a>三、域名解析过程</h2><ul><li>递归解析</li><li>迭代解析</li></ul><h1 id="四、万维网应用"><a href="#四、万维网应用" class="headerlink" title="四、万维网应用"></a>四、万维网应用</h1><h2 id="一、万维网应用结构"><a href="#一、万维网应用结构" class="headerlink" title="一、万维网应用结构"></a>一、万维网应用结构</h2><p>体系结构：</p><ul><li>Web服务器</li><li>浏览器</li><li>超文本传输协议（HTTP）</li><li>统一资源定位符（URL）：主机域名（或IP地址）+对象的路径名称</li></ul><h2 id="二、HTTP"><a href="#二、HTTP" class="headerlink" title="二、HTTP"></a>二、HTTP</h2><p>HTTP协议是Web应用的应用层协议。定义浏览器如何向Web服务器发送请求以及Web服务器如何向浏览器进行响应。<br>连接类型：</p><ul><li><ol><li>非持久连接的HTTP<br>HTTP客户与HTTP服务器建立TCP连接后，通过改连接发送HTTP请求报文，接收HTTP响应报文，然后<strong>断开连接</strong></li></ol></li><li><ol start="2"><li>并行连接<br>建立多条并行TCP连接，并行发送HTTP请求和并行接收HTTP响应，然后断开连接</li></ol></li><li><ol start="3"><li>持久连接的HTTP</li></ol><ul><li>非流水方式的持久连接：客户端结构到响应报文后，不断开TCP连接，继续请求</li><li>流水方式持久连接：客户端在收到前一个响应报文后，不断开连接，继续<strong>并行</strong>请求</li></ul></li></ul><p>HTTP1.0使用 非常久连接方式, HTTP1.1使用流水方式持久连接<br>请求报文和响应报文最主要的区别是<strong>起始行</strong><br>HTTP典型的请求方法</p><table><thead><tr><th align="center">类型</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">GET</td><td align="center">请求读取URL所表示的信息，是<strong>最常见</strong>的方法</td></tr><tr><td align="center">HEAD</td><td align="center">请求读取URL所表示的信息的首部</td></tr><tr><td align="center">POST</td><td align="center">给服务器添加信息</td></tr><tr><td align="center">OPTION</td><td align="center">请求一些选项的信息</td></tr><tr><td align="center">GET</td><td align="center">在指明的URL下存储一个文档</td></tr></tbody></table><h2 id="三、-Cookie"><a href="#三、-Cookie" class="headerlink" title="三、 Cookie"></a>三、 Cookie</h2><p>网络为了辨别用户身份，进行会话跟踪而存储在<strong>用户本地终端</strong>上的数据<br>常见的用途：</p><ul><li><ol><li>网站可以利用Cookie的ID来<strong>准确统计</strong>网站的实际访问人数等数据</li></ol></li><li><ol start="2"><li>网站可以利用Cookie<strong>限制</strong>某些特定用户的访问</li></ol></li><li><ol start="3"><li>网站可以<strong>存储</strong>用户访问过程中的操作习惯和偏好</li></ol></li><li><ol start="4"><li><strong>记录</strong>用户登录网站使用的用户名、密码等信息</li></ol></li><li>5.电子商务网站利用Cookie可以实现<strong>购物车</strong>功能</li></ul><h1 id="五、Internet电子邮件"><a href="#五、Internet电子邮件" class="headerlink" title="五、Internet电子邮件"></a>五、Internet电子邮件</h1><h2 id="一、体系结构："><a href="#一、体系结构：" class="headerlink" title="一、体系结构："></a>一、体系结构：</h2><ul><li>1.邮件服务器:<strong>电子邮件体系结构的核心</strong></li><li>2.用户代理</li><li>3.简单邮件传出协议（SMTP）</li><li>4.邮件读取协议(P0P3,IMAP,HTTP)</li></ul><h2 id="二、SMTP"><a href="#二、SMTP" class="headerlink" title="二、SMTP"></a>二、SMTP</h2><p>通过<strong>3个阶段</strong>的应用层交互完成邮件的传输</p><ul><li>握手阶段</li><li>邮件传输阶段</li><li>关闭阶段</li></ul><p>SMTP特点:</p><ul><li>只能传送<strong>7位</strong>ASCII码文本内容</li><li>传送的邮件中本呢个包含 <strong>“CRLF.CRLF”</strong></li><li>SMTP使用”<strong>推动</strong>“协议（HTTP是“拉动“协议）</li><li>SMTP 使用<strong>TCP连接是持久的</strong></li></ul><h2 id="三、MIME"><a href="#三、MIME" class="headerlink" title="三、MIME"></a>三、MIME</h2><p>互联网邮件扩展：产出非7位ASCII码文本内容时，必须依据一个标注将非7位ASCII码文本内容转换为7位ASCII码文本内容，然后再传输</p><h2 id="四、邮件读取协议"><a href="#四、邮件读取协议" class="headerlink" title="四、邮件读取协议"></a>四、邮件读取协议</h2><ol><li>第三版邮局协议（POP3）:授权阶段，事物处理阶段，更新阶段</li><li>互联网邮件访问协议（IMAP）:对邮件的操作会<strong>反应在服务器上</strong></li><li>Web邮件兄的邮件都区协议(HTTP)</li></ol><h1 id="六、FTP"><a href="#六、FTP" class="headerlink" title="六、FTP"></a>六、FTP</h1><p>文件传送协议：在互联网的两个主机间实现文件互传的网络应用，其应用层协议成为FTP<br>FTP应用结构</p><ul><li><ol><li>控制连接（21）：客户和服务器之间的传出控制信息。如用户标识、口令、改变远程目录，上传下载文件命令等</li></ol></li><li><ol start="2"><li>数据连接（20）：实际传送文件内容<br>FTP是有状态的协议</li></ol></li></ul><h1 id="七、P2P应用"><a href="#七、P2P应用" class="headerlink" title="七、P2P应用"></a>七、P2P应用</h1><p>特点：</p><ul><li><ol><li>应用的对等方是用户的计算机</li></ol></li><li><ol start="2"><li>很强的应用规模伸缩性</li></ol></li><li><ol start="3"><li>应用在对等方之间进行</li></ol></li><li><ol start="4"><li>应用充分聚集利用改了端系统的计算能力以及网络传出带宽</li></ol></li></ul><h1 id="八、Socket编程基础"><a href="#八、Socket编程基础" class="headerlink" title="八、Socket编程基础"></a>八、Socket编程基础</h1><img src="/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E5%BA%94%E7%94%A8%E5%B1%82/socket.png" class="" title="socket"><h2 id="一、套接字与端口号"><a href="#一、套接字与端口号" class="headerlink" title="一、套接字与端口号"></a>一、套接字与端口号</h2><ul><li><p>套接字(Socket)：典型的网络应用编程接口</p></li><li><p>端口号：标识套接字</p></li><li><p>扩展常见的端口号</p><table><thead><tr><th align="center">端口号</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">20(数据)、21（控制）</td><td align="center">FTP文件传输协议</td></tr><tr><td align="center">25</td><td align="center">SMTP简单邮件传输协议</td></tr><tr><td align="center">53</td><td align="center">DNS域名服务器</td></tr><tr><td align="center">80</td><td align="center">HTTP超文本传输协议</td></tr><tr><td align="center">110</td><td align="center">POP3第三版邮局协议</td></tr></tbody></table></li></ul><h2 id="二、Socket-API"><a href="#二、Socket-API" class="headerlink" title="二、Socket API"></a>二、Socket API</h2><h3 id="1-创建套接字"><a href="#1-创建套接字" class="headerlink" title="1.创建套接字"></a>1.创建套接字</h3><figure class="highlight stylus"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">socket</span><span class="hljs-params">()</span></span><br></code></pre></td></tr></table></figure><ul><li>传输层使用UDP协议，创建数据报类型套接字(SOCK_DGRAM)</li><li>传输层使用TCP协议，创建流式套接字(SOCK_STREAM)</li><li>应用层数据没有经过传输层，直接到网络层，创建原始套接字(SOCK_RAW)</li></ul><h3 id="2-Socket-API-函数"><a href="#2-Socket-API-函数" class="headerlink" title="2.Socket API 函数"></a>2.Socket API 函数</h3><p>1.创建套接字：<code>socket()</code></p><p>2.绑定套接字的本地端点地址：<code>bind()</code></p><p>3.设置监听：<code>listen()</code></p><p>4.建立连接</p><ul><li>TCP客户端：<code>connect()</code></li><li>TCP服务端：<code>accept()</code></li></ul><p>5.接收数据</p><ul><li>TCP：<code>recv()</code></li><li>UDP：<code>recvfrom()</code></li></ul><p>6.发送数据</p><ul><li>TCP：<code>send()</code></li><li>UDP： <code>sendto()</code></li></ul><p>7.关闭套接字：<code>close()</code></p>]]></content>
    
    
    <categories>
      
      <category>计算机网络原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络</tag>
      
      <tag>Socket</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络原理-基本概念</title>
    <link href="/2022/03/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <url>/2022/03/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="一、计算机网络基本概念"><a href="#一、计算机网络基本概念" class="headerlink" title="一、计算机网络基本概念"></a>一、计算机网络基本概念</h1><h2 id="一、计算机网络的定义"><a href="#一、计算机网络的定义" class="headerlink" title="一、计算机网络的定义"></a>一、计算机网络的定义</h2><ol><li>起源：计算机网络是<strong>计算机技术</strong>与<strong>通讯技术</strong>融合的产物</li><li>定义：计算机网络是<strong>互连</strong>、<strong>自治的</strong>的计算机集合</li><li>ISP：因特网服务提供商(Internet Service Provider, ISP)</li></ol><h2 id="二、协议的定义"><a href="#二、协议的定义" class="headerlink" title="二、协议的定义"></a>二、协议的定义</h2><ol><li>网络协议：网路通信实体之间在数据交换过程中需要遵循的<strong>约定</strong>或<strong>规则</strong></li><li>三要素<ul><li>语法：定义实体之间交换信息的<strong>格式与结构</strong></li><li>语义：定义实体之间交换信息的<strong>控制信息</strong></li><li>时序：定义实体之间交换信息的<strong>顺序</strong>以及如何匹配或适应彼此的<strong>速度</strong></li></ul></li></ol><h2 id="三、计算机网络的功能"><a href="#三、计算机网络的功能" class="headerlink" title="三、计算机网络的功能"></a>三、计算机网络的功能</h2><ol><li><strong>硬件</strong>资源共享：例云存储、云计算</li><li><strong>软件</strong>资源共享：例大型办公软件、大型数据库系统</li><li><strong>信息</strong>资源共享：例信息检索、新闻浏览</li></ol><h2 id="四、计算机网络的分类"><a href="#四、计算机网络的分类" class="headerlink" title="四、计算机网络的分类"></a>四、计算机网络的分类</h2><ol><li><p>按照覆盖范围分类</p><ul><li>个域网PAN </li><li>局域网LAN</li><li>城域网MAN</li><li>广域网WAN</li></ul></li><li><p>按拓扑结构分类</p><img src="/2022/03/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/%E7%BD%91%E7%BB%9C%E6%8B%93%E6%AD%A5%E7%BB%93%E6%9E%84.png" class="" title="网络拓步结构"><ul><li>星形拓扑结构，一个中央节点，网络中的主机通过点对点通信链路与中央节点连接(个域网、局域网)<ul><li>优点：域名监控管理、故障诊断、隔离</li><li>缺点：<strong>中央节点</strong>一旦故障，全网瘫痪。网络规模受限于<strong>中央节点</strong>的端口数量</li></ul></li><li>总线型拓扑结构：采用一条广播信息作为公共传输介质，所有节点均与总线连接，节点间的通讯通过共享的总线进行(早期的局域网)<ul><li>优点：结构简单，易于扩展</li><li>缺点：通信范围受限，容易<strong>产生冲突</strong></li></ul></li><li>环形拓扑结构：利用通信链路将所有节点连接成一个闭合的环(早期的局域网、城域网)<ul><li>优点：电缆长度短，易于避免冲突</li><li>缺点：某节点故障引起全网瘫痪，加新（撤出）阶段麻烦</li></ul></li><li>网状拓扑结构：网络中的节点通过多条链路与不同的节点直接相连接（广域网、<strong>核心网络</strong>）<ul><li>优点：网络<strong>可靠性高</strong></li><li>缺点：网络结构复杂，成本高</li></ul></li><li>树形拓扑结构：可以看做是总线型拓扑或星形拓扑结构网络的扩展（局域网）<ul><li>优点：易于扩展，故障易隔离</li><li>缺点：根节点要求高</li></ul></li><li>混合拓扑结构：由两种以上简单拓扑结构网络混合连接而成的网络（绝大数实际网络）<ul><li>优点：易于扩展，可以构建不同规模的网络，根据需要优选网络结构</li><li>缺点：结构复杂，管理与维护复杂</li></ul></li></ul></li><li><p>交换方式</p><ul><li>电路交换网络</li><li>报文交换网络</li><li>分组交换网络</li></ul></li><li><p>网络用户属性</p><ul><li>公用网</li><li>私有网</li></ul></li></ol><h1 id="二、计算机网络结构"><a href="#二、计算机网络结构" class="headerlink" title="二、计算机网络结构"></a>二、计算机网络结构</h1><h2 id="一、网络边缘"><a href="#一、网络边缘" class="headerlink" title="一、网络边缘"></a>一、网络边缘</h2><ol><li>网络边缘：连接到网上的所有端系统</li><li>端系统（主机）：连接到网络上的计算机</li></ol><h2 id="二、接入网络"><a href="#二、接入网络" class="headerlink" title="二、接入网络"></a>二、接入网络</h2><ol><li>电话拨号接入： 利用<strong>电话</strong>网络接入</li><li>非对称数字用户线 路ADSL:利用<strong>电话</strong>网络接入。基于频分多路复用技术。非对称、独享式接入</li><li>混合光纤通州电缆HFC接入网络：利用<strong>有线电视</strong>网络接入。基于频分多路复用技术。非对称、共享式接入</li><li>局域网：电箱的局域网技术是<strong>以太网、WiFi</strong></li><li>移动接入网络：利用移动通信网络，如3G&#x2F;4G&#x2F;5G网络</li></ol><h2 id="三、网络核心"><a href="#三、网络核心" class="headerlink" title="三、网络核心"></a>三、网络核心</h2><p>由<strong>通信链路互连的分组交换设备</strong>构成的网络，作用是实现挽留过边缘中主机之间的<strong>中继与转发</strong></p><h1 id="三、数据交换技术"><a href="#三、数据交换技术" class="headerlink" title="三、数据交换技术"></a>三、数据交换技术</h1><ol><li>概念<ul><li><strong>交换设备</strong>：多通信端口，同时连接多个通信节点</li><li><strong>数据交换</strong>：是实现大规模网络和欣赏进行数据传输的<strong>技术基础</strong></li></ul></li><li>技术<ul><li>电路交换<ul><li>最早出现的交换方式</li><li>电话网络是最早、做大的电路交换网络</li><li>3个阶段：建立电路、传输数据、拆除电路</li></ul></li><li>报文交换<ul><li><strong>存储-转发</strong>的交换方式</li><li>优点：信道利用率高</li><li>缺点：网络的延迟时间变长，有时还需要丢弃报文</li></ul></li><li>分组交换<ul><li>包交换，<strong>存储-转发</strong>交换方式，计算机挽留过中使用<strong>最广泛</strong>的交换技术</li><li>在其他条件相同的情况下，分组长度越长，延迟时间越长，范围：16~4096B</li></ul></li></ul></li></ol><h1 id="四、计算机网络性能"><a href="#四、计算机网络性能" class="headerlink" title="四、计算机网络性能"></a>四、计算机网络性能</h1><ol><li>速率与带宽<ul><li>速率：单位时间内传输的数据量，描述挽留过传输数据的快慢</li><li>带宽：在计算机网络中，指的是一条链路或信道的最高数据速率</li><li>单位：bit&#x2F;s(位每秒)， bps(位每秒)</li></ul></li><li>时延<br>指数据从网络中的一个阶段到达另一个节点所需要的时间<br>a. 节点处理时延<br>b. 排队时延<br>c. 传输时延或发送时延，d &#x3D; L&#x2F;R, L：分组长度，单位：bit, R:链路带宽，单位：bit&#x2F;s<br>d. 传播时延，d&#x3D;D&#x2F;V, D:物理链路长度，单位:m, V:信号传播速度，单位：m&#x2F;s</li><li>时延带宽积<br>物理链路的<strong>传播时延</strong>与<strong>链路带宽</strong>的乘积，记为G。表示一段链路可以容纳的数据位数，也称为以位为单位的链路长度</li><li>丢包率<br>反应挽留过的拥塞程度</li><li>吞吐量<br>单位时间内源主机通过网络向目的主机<strong>实际送达</strong>的数据量</li></ol><h1 id="五、计算机网络体系结构"><a href="#五、计算机网络体系结构" class="headerlink" title="五、计算机网络体系结构"></a>五、计算机网络体系结构</h1><ol><li><p>计算机网络所划分的<strong>层次</strong>以及<strong>各层协议</strong>的集合</p></li><li><p>分类</p></li></ol><ul><li><p>OSI参考模型(7层) ：应用层、表示层、会话层、传输层、网络层、数据链路层、物理层</p><ul><li>特点：<ul><li>数据在垂直的层次中<strong>自上而下</strong>地逐层传递</li><li>对等层不直接进行通信，称为<strong>虚拟通信</strong>，物理层的两个端点进行物理通信，称为<strong>实通信</strong></li><li>中间系统通常只实现<strong>物理层、数据链路层和网络层</strong>功能</li><li>节点到节点层：物理层、数据链路层。网络层</li><li>端到端层：传输层、会话层、表示层、应用层</li></ul></li><li>数据单元：在层的实体之间传送的比特组, 对等层之间传输的数据单元：协议数据单元（PDU） <ul><li>应用层：报文</li><li>传输层：数据段或报文段</li><li>网络层：分组或包</li><li>数据链路层：帧</li><li>物理层：比特流或位</li></ul></li><li>服务访问点<ul><li>相邻层间的服务是通过接口上面的服务访问点进行的</li></ul></li></ul></li><li><p>TCP&#x2F;IP参考模型(4层)：应用层：报文，传输层：段，网络互连层(<strong>TCP&#x2F;IP 参考模型的核心</strong>)：数据报，网络接口层：帧</p></li><li><p>五层参考模型（5层）：应用层：报文，传输层：段，网络层：数据报，链路层：帧，物理层：比特流</p></li></ul><h1 id="六、计算机网络与因特网发展简史"><a href="#六、计算机网络与因特网发展简史" class="headerlink" title="六、计算机网络与因特网发展简史"></a>六、计算机网络与因特网发展简史</h1><p>ARPAnet是第一个分组交换的计算机网络，也会当今因特网的祖先</p>]]></content>
    
    
    <categories>
      
      <category>计算机网络原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络结构</tag>
      
      <tag>基础</tag>
      
      <tag>网络性能</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
